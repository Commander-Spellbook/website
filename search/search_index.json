{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Development Docs","text":"<p>This documentation is rendered as a website on GitHub Pages. Any change to markdown files will be deployed after it gets merged into the <code>main</code> branch.</p>"},{"location":"index.html#getting-started","title":"Getting Started","text":"<p>The site requires node v16 and npm 8 (which comes installed with node@16) to run locally, since it utilizes workspaces to structure the repo.</p> <p>If you are already using the Node Version Manager (nvm) tool, you can run <code>nvm install</code> in the directory to get the correct version of node.</p> <p>Once you have installed node, you can install the project's dependencies:</p> <pre><code>npm install\n</code></pre>"},{"location":"index.html#frontend-app","title":"Frontend App","text":"<ul> <li>Installation and setup</li> <li>Creating a new page</li> <li>Creating a component</li> </ul>"},{"location":"index.html#backend-api","title":"Backend API","text":"<p>The backend (auth, api, database) is all managed by a separate API outside of this repo.</p>"},{"location":"index.html#automated-testing","title":"Automated Testing","text":"<ul> <li>Integration Testing</li> </ul>"},{"location":"frontend/SUMMARY.html","title":"SUMMARY","text":"<ul> <li>Installation and setup</li> <li>Creating a new page</li> <li>Creating a component</li> </ul>"},{"location":"frontend/components.html","title":"Components","text":"<p>Create a <code>React</code> component in the <code>components</code> directory. If it's a component specific to a page, nest it in a directory with the same name as the page.</p>"},{"location":"frontend/installation-and-setup.html","title":"Frontend App Setup","text":"<p>The frontend uses Next to create the app.</p>"},{"location":"frontend/installation-and-setup.html#installation-requirements","title":"Installation Requirements","text":"<p>See the Getting Started instructions for details about installing node.</p>"},{"location":"frontend/installation-and-setup.html#build-setup","title":"Build Setup","text":"<pre><code># serve with hot reload at localhost:3000\nyarn dev\n</code></pre> <p>If you want to see how the app will behave in production, build and run it:</p> <pre><code># build for production (this will take a while)\nyarn build\n# runs the site in prod mode using the generated pages from the build-frontend step\nyarn start\n</code></pre>"},{"location":"frontend/pages.html","title":"Pages","text":"<p>Create a <code>React</code> component in the pages directory, where the name of the file is the path a user will navigate to in the url.</p> <p>In general, try to keep page logic simple. Pull any complex logic out into a component in the <code>components</code> directory in a folder with the same name as the route.</p>"},{"location":"testing/integration-testing.html","title":"Integration Testing","text":"<p>Our integration tests use Cypress as our test runner.</p>"},{"location":"testing/integration-testing.html#what-to-test","title":"What to test","text":"<p>Unlike unit tests, we really only want to test broad strokes behavior. The most common usages of the app, to ensure the functionality of the app remains unbroken.</p>"},{"location":"testing/integration-testing.html#how-to-run-the-tests","title":"How to Run the Tests","text":"<ul> <li>Run the app <pre><code>npm run dev\n</code></pre></li> <li>Run the tests <pre><code>npm run cy:run\n</code></pre></li> </ul>"},{"location":"testing/integration-testing.html#videosscreenshots","title":"Videos/Screenshots","text":"<p>By default, because it takes so long to process video, we have the video and screenshot capabilities turned off. If it's useful to inspect the video of what happened after the tests run, you can append this config flag to the test command:</p> <pre><code>npm run cy:run -- --config video=true,videoUploadOnPasses=true,screenshotOnRunFailure=true\n</code></pre>"}]}