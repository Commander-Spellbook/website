name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 */4 * * *"

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies 👨🏻‍💻
        run: npm ci

      - name: Run linter 👀
        run: npm run lint

      - name: Run unit tests 🧪
        run: npm test

      - name: Run Integration tests 🧪
        concurrency:
          group: ${{ github.head_ref }}
          cancel-in-progress: true
        run: npm run test:integration

      - name: Generate 🏗️
        if: ${{ github.event_name != 'pull_request'}}
        concurrency:
          group: "production_deploy"
          cancel-in-progress: true
        run: npm run generate
        env:
          NODE_ENV: production

      - name: Configure AWS Credentials ㊙️
        if: ${{ github.event_name != 'pull_request'}}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3 🛫
        if: ${{ github.event_name != 'pull_request'}}
        concurrency:
          group: "production_deploy"
          cancel-in-progress: true
        run: aws s3 sync ./dist/ s3://commanderspellbook.com --delete

      - name: Bust Cloudfront Cache 👥
        concurrency:
          group: "production_deploy"
          cancel-in-progress: true
        if: ${{ github.event_name != 'pull_request'}}
        run: aws cloudfront create-invalidation --distribution-id EOJD6575ATAH3 --paths "/*"
